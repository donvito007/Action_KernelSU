name: Build VoltageOS lavender Kernel

on:
  workflow_dispatch:

    inputs:
      KERNEL_SOURCE:
        description: 'Kernel Source'
        required: true
        default: 'VoltageOS-Devices/kernel_xiaomi_lavender'
      KERNEL_SOURCE_BRANCH:
        description: 'Branch'
        required: true
        default: '13-4.4-ksu'
      KERNEL_DEFCONFIG:
        description: 'Defconfig'
        required: true
        default: 'lavender_defconfig'


jobs:
  build:
    runs-on: ubuntu-latest
    steps:

    - uses: actions/checkout@v3

    - name: Setup Configuration
      run: |
        echo "KERNEL_SOURCE=${{ github.event.inputs.KERNEL_SOURCE }}" >> $GITHUB_ENV
        echo "KERNEL_SOURCE_BRANCH=${{ github.event.inputs.KERNEL_SOURCE_BRANCH }}" >> $GITHUB_ENV
        echo "KERNEL_DEFCONFIG=${{ github.event.inputs.KERNEL_DEFCONFIG }}" >> $GITHUB_ENV
    
    - name: Setup build kernel environment
      run: |
        echo "DEVICE=$(echo ${{ env.KERNEL_DEFCONFIG }} | sed 's!vendor/!!;s/_defconfig//;s/_user//;s/-perf//')" >> $GITHUB_ENV
        sudo apt-get update
        sudo apt-get install dos2unix flex bison git ccache automake flex lzop bison gperf build-essential zip curl zlib1g-dev g++-multilib libxml2-utils bzip2 libbz2-dev libbz2-1.0 libghc-bzlib-dev squashfs-tools pngcrush schedtool dpkg-dev liblz4-tool make optipng maven libssl-dev pwgen libswitch-perl policycoreutils minicom libxml-sax-base-perl libxml-simple-perl bc libc6-dev-i386 lib32ncurses5-dev libx11-dev lib32z-dev libgl1-mesa-dev xsltproc unzip device-tree-compiler python2 python3
        mkdir clang
        cd clang
        wget https://github.com/ZyCromerZ/Clang/releases/download/14.0.6-20230213-release/Clang-14.0.6-20230213.tar.gz
        tar -zvxf Clang-*.tar.gz
        rm Clang-*.tar.gz
    
    
    - name: Checkout Kernel Source
      uses: actions/checkout@v3
      with:
        github-server-url: 'https://github.com'
        repository: ${{ env.KERNEL_SOURCE }}
        ref: ${{ env.KERNEL_SOURCE_BRANCH }}
        submodules: recursive
        path: android-kernel

    - name: Setup KernelSU
      run: |
        cd android-kernel
        git clone --depth=1 https://github.com/Peppe289/AnyKernel3.git -b lavender anykernel
        rm -rf KernelSU
        git clone https://github.com/tiann/KernelSU.git
        cd KernelSU
        echo "KSU_VERSION=$(($(git rev-list --count HEAD) + 10200))" >> $GITHUB_ENV
        
    - name: Build kernel
      run: |
        export PATH="${{ github.workspace }}/clang/bin:${PATH}"
        export CLANG_TRIPLE=aarch64-linux-gnu-
        export CROSS_COMPILE=aarch64-linux-gnu-
        export CROSS_COMPILE_ARM32=arm-linux-gnueabi-
        export ARCH=arm64
        export SUBARCH=arm64
        export LD=ld.lld
        cd android-kernel
        make CC=clang CXX=clang++ LLVM=1 LLVM_IAS=1 O=out ${{ env.KERNEL_DEFCONFIG }}
        make CC=clang CXX=clang++ LLVM=1 LLVM_IAS=1 O=out 
        cp out/arch/arm64/boot/Image.gz anykernel
    
    - name: Upload the kernel AK3 zip
      uses: actions/upload-artifact@v3
      with:
        name: 4.4_AK3_${{ env.KSU_VERSION }}
        path: android-kernel/anykernel/*
    

